{"version":3,"sources":["services/persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Notification","message","includes","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","errorMessage","setErrorMessage","useEffect","personService","initialPersons","Person","person","name","number","onClick","handleRemove","Header","text","window","confirm","remainingPersons","setTimeout","value","onChange","event","target","onSubmit","preventDefault","nameExists","forEach","item","changedPerson","find","p","returnedPerson","map","catch","error","concat","console","log","type","filter","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98db33bf.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n\r\nexport default { \r\n  getAll: getAll, \r\n  create: create,\r\n  remove: remove,\r\n  update: update \r\n}","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === '') {\r\n      return null\r\n    }\r\n\r\n    if (message.includes('succesfully')) {\r\n      return (\r\n        <div className=\"confirm\">\r\n          {message}\r\n        </div>\r\n      )\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport personService from './services/persons'\r\nimport Notification from './components/Notification.js'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ newFilter, setNewFilter ] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n        .then(initialPersons => {\r\n        setPersons(initialPersons)\r\n      })\r\n  }, [])\r\n\r\n  const addName = (event) => {\r\n      event.preventDefault()\r\n\r\n      let nameExists = false\r\n\r\n      persons.forEach(function(item) {\r\n          if (item.name === newName) {\r\n              nameExists = true\r\n          }\r\n      })\r\n\r\n      if (nameExists) {\r\n        const confirmed = window.confirm(`${newName} is already added to phonebook. Replace the old number with a new one?`)\r\n        if (confirmed) {\r\n          const person = persons.find(p => p.name === newName)\r\n          const changedPerson = { ...person, number: newNumber }\r\n\r\n          personService\r\n            .update(changedPerson.id, changedPerson)\r\n              .then(returnedPerson => {\r\n              setPersons(persons.map(person => person.id !== changedPerson.id ? person : returnedPerson))\r\n              setErrorMessage(\r\n                `${changedPerson.name} changed succesfully`\r\n              )\r\n              setTimeout(() => {\r\n                setErrorMessage('')\r\n              }, 2000)\r\n            })\r\n            .catch(error => {\r\n              setErrorMessage(\r\n                `${changedPerson.name} was already removed from server`\r\n              )\r\n              setTimeout(() => {\r\n                setErrorMessage('')\r\n              }, 2000)\r\n            })\r\n        }\r\n      } else {\r\n        const personObject = {\r\n            name: newName,\r\n            number: newNumber\r\n        }\r\n        \r\n        personService\r\n            .create(personObject)\r\n            .then(returnedPerson => {\r\n              setPersons(persons.concat(returnedPerson))\r\n              setErrorMessage(\r\n                `${returnedPerson.name} added succesfully`\r\n              )\r\n              setTimeout(() => {\r\n                setErrorMessage('')\r\n              }, 2000)\r\n            })\r\n            .catch(error => {\r\n              console.log(error.response.data)\r\n              setErrorMessage(\r\n                `Message: ${error}`\r\n              )\r\n            })\r\n      }\r\n      setNewName('')\r\n      setNewNumber('')\r\n      setNewFilter('')\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n      setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n    setNewFilter(event.target.value)\r\n  }\r\n\r\n  const FilteredPersons = ({persons}) => {\r\n      const filteredpersons = persons.filter(person => person.name.includes(newFilter))\r\n    return (filteredpersons.map(person => <Person key={person.name} person={person}/>))\r\n  }\r\n\r\n  const Person = ({person}) => {\r\n    return <li>{person.name} {person.number} <button onClick={() => handleRemove(person)}>Delete</button></li>\r\n  }\r\n\r\n  const Header = ({text}) => {\r\n    return <h2>{text}</h2>\r\n  }\r\n\r\n  const handleRemove = person => {\r\n    const confirmed = window.confirm(`Delete ${person.name}`);\r\n    \r\n    if (confirmed) {\r\n      personService\r\n        .remove(person.id)\r\n        .then( () => {\r\n          personService\r\n            .getAll()\r\n            .then(remainingPersons => {\r\n            setPersons(remainingPersons)\r\n            })\r\n          setErrorMessage(\r\n            `${person.name} removed succesfully`\r\n          )\r\n          setTimeout(() => {\r\n            setErrorMessage('')\r\n          }, 2000)\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header text=\"Phonebook\"/>\r\n      <Notification message={errorMessage} />\r\n      <div>filter: <input value={newFilter} onChange={handleFilterChange}/></div>\r\n      <Header text=\"Add a new\"/>\r\n      <form onSubmit={addName}>\r\n        <div>name: <input value={newName} onChange={handleNameChange}/></div>\r\n        <div>number: <input value={newNumber} onChange={handleNumberChange}/></div>\r\n        <div><button type=\"submit\">add</button></div>\r\n      </form>\r\n      <Header text=\"Numbers\"/>\r\n      <ul><FilteredPersons persons={persons}/></ul>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport './index.css'\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}